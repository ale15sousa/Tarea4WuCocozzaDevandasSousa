

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Oct 15 15:45:45 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _T0CONbits	set	4053
    52  0000                     _INTCON3bits	set	4080
    53  0000                     _INTCON2bits	set	4081
    54  0000                     _INTCONbits	set	4082
    55  0000                     _RCONbits	set	4048
    56  0000                     _LATDbits	set	3980
    57  0000                     _LATBbits	set	3978
    58  0000                     _TRISD	set	3989
    59  0000                     _TRISB	set	3987
    60  0000                     _ADCON1	set	4033
    61  0000                     _OSCCONbits	set	4051
    62                           
    63                           ; #config settings
    64                           
    65                           	psect	cinit
    66  0001D4                     __pcinit:
    67                           	callstack 0
    68  0001D4                     start_initialization:
    69                           	callstack 0
    70  0001D4                     __initialization:
    71                           	callstack 0
    72                           
    73                           ; Clear objects allocated to COMRAM (6 bytes)
    74  0001D4  6A06               	clrf	(__pbssCOMRAM+5)& (0+255),c
    75  0001D6  6A05               	clrf	(__pbssCOMRAM+4)& (0+255),c
    76  0001D8  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    77  0001DA  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    78  0001DC  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    79  0001DE  6A01               	clrf	__pbssCOMRAM& (0+255),c
    80  0001E0                     end_of_initialization:
    81                           	callstack 0
    82  0001E0                     __end_of__initialization:
    83                           	callstack 0
    84  0001E0  9009               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    85  0001E2  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    86  0001E4  0E00               	movlw	low (__Lmediumconst shr (0+16))
    87  0001E6  6EF8               	movwf	tblptru,c
    88  0001E8  0100               	movlb	0
    89  0001EA  EFC7  F000         	goto	_main	;jump to C main() function
    90                           
    91                           	psect	bssCOMRAM
    92  000001                     __pbssCOMRAM:
    93                           	callstack 0
    94  000001                     _stop:
    95                           	callstack 0
    96  000001                     	ds	2
    97  000003                     _timer:
    98                           	callstack 0
    99  000003                     	ds	2
   100  000005                     _cont:
   101                           	callstack 0
   102  000005                     	ds	2
   103                           
   104                           	psect	cstackCOMRAM
   105  000007                     __pcstackCOMRAM:
   106                           	callstack 0
   107  000007                     ??_isr:
   108                           
   109                           ; 1 bytes @ 0x0
   110  000007                     	ds	2
   111  000009                     
   112                           ; 1 bytes @ 0x2
   113 ;;
   114 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   115 ;;
   116 ;; *************** function _main *****************
   117 ;; Defined at:
   118 ;;		line 86 in file "mainTarea4.c"
   119 ;; Parameters:    Size  Location     Type
   120 ;;		None
   121 ;; Auto vars:     Size  Location     Type
   122 ;;		None
   123 ;; Return value:  Size  Location     Type
   124 ;;                  1    wreg      void 
   125 ;; Registers used:
   126 ;;		wreg, status,2
   127 ;; Tracked objects:
   128 ;;		On entry : 0/0
   129 ;;		On exit  : 0/0
   130 ;;		Unchanged: 0/0
   131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   132 ;;      Params:         0       0       0       0       0       0       0       0       0
   133 ;;      Locals:         0       0       0       0       0       0       0       0       0
   134 ;;      Temps:          0       0       0       0       0       0       0       0       0
   135 ;;      Totals:         0       0       0       0       0       0       0       0       0
   136 ;;Total ram usage:        0 bytes
   137 ;; Hardware stack levels required when called: 1
   138 ;; This function calls:
   139 ;;		Nothing
   140 ;; This function is called by:
   141 ;;		Startup code after reset
   142 ;; This function uses a non-reentrant model
   143 ;;
   144                           
   145                           	psect	text0
   146  00018E                     __ptext0:
   147                           	callstack 0
   148  00018E                     _main:
   149                           	callstack 30
   150  00018E                     
   151                           ;mainTarea4.c: 88:     OSCCONbits.IRCF = 0b111;
   152  00018E  0E70               	movlw	112
   153  000190  12D3               	iorwf	211,f,c	;volatile
   154                           
   155                           ;mainTarea4.c: 94:     ADCON1 = 0b00001111;
   156  000192  0E0F               	movlw	15
   157  000194  6EC1               	movwf	193,c	;volatile
   158                           
   159                           ;mainTarea4.c: 99:     TRISB = 0b00000111;
   160  000196  0E07               	movlw	7
   161  000198  6E93               	movwf	147,c	;volatile
   162                           
   163                           ;mainTarea4.c: 101:     TRISD = 0b00000000;
   164  00019A  0E00               	movlw	0
   165  00019C  6E95               	movwf	149,c	;volatile
   166  00019E                     
   167                           ;mainTarea4.c: 103:     LATBbits.LB0 = 0;
   168  00019E  908A               	bcf	138,0,c	;volatile
   169  0001A0                     
   170                           ;mainTarea4.c: 104:     LATBbits.LB1 = 0;
   171  0001A0  928A               	bcf	138,1,c	;volatile
   172  0001A2                     
   173                           ;mainTarea4.c: 105:     LATBbits.LB2 = 0;
   174  0001A2  948A               	bcf	138,2,c	;volatile
   175  0001A4                     
   176                           ;mainTarea4.c: 107:     LATDbits.LD0 = 0;
   177  0001A4  908C               	bcf	140,0,c	;volatile
   178  0001A6                     
   179                           ;mainTarea4.c: 108:     LATDbits.LD1 = 0;
   180  0001A6  928C               	bcf	140,1,c	;volatile
   181  0001A8                     
   182                           ;mainTarea4.c: 109:     LATDbits.LD2 = 0;
   183  0001A8  948C               	bcf	140,2,c	;volatile
   184  0001AA                     
   185                           ;mainTarea4.c: 110:     LATDbits.LD3 = 0;
   186  0001AA  968C               	bcf	140,3,c	;volatile
   187  0001AC                     
   188                           ;mainTarea4.c: 111:     LATDbits.LD4 = 0;
   189  0001AC  988C               	bcf	140,4,c	;volatile
   190  0001AE                     
   191                           ;mainTarea4.c: 117:     RCONbits.IPEN = 1;
   192  0001AE  8ED0               	bsf	208,7,c	;volatile
   193  0001B0                     
   194                           ;mainTarea4.c: 118:     INTCONbits.GIEH = 1;
   195  0001B0  8EF2               	bsf	242,7,c	;volatile
   196  0001B2                     
   197                           ;mainTarea4.c: 119:     INTCONbits.GIEL = 1;
   198  0001B2  8CF2               	bsf	242,6,c	;volatile
   199  0001B4                     
   200                           ;mainTarea4.c: 121:     INTCONbits.TMR0IE = 1;
   201  0001B4  8AF2               	bsf	242,5,c	;volatile
   202  0001B6                     
   203                           ;mainTarea4.c: 123:     INTCON2bits.INTEDG0 = 1;
   204  0001B6  8CF1               	bsf	241,6,c	;volatile
   205  0001B8                     
   206                           ;mainTarea4.c: 124:     INTCON2bits.INTEDG1 = 1;
   207  0001B8  8AF1               	bsf	241,5,c	;volatile
   208  0001BA                     
   209                           ;mainTarea4.c: 125:     INTCON2bits.INTEDG2 = 1;
   210  0001BA  88F1               	bsf	241,4,c	;volatile
   211  0001BC                     
   212                           ;mainTarea4.c: 127:     INTCONbits.INT0IE = 1;
   213  0001BC  88F2               	bsf	242,4,c	;volatile
   214  0001BE                     
   215                           ;mainTarea4.c: 128:     INTCON3bits.INT1IE = 1;
   216  0001BE  86F0               	bsf	240,3,c	;volatile
   217  0001C0                     
   218                           ;mainTarea4.c: 129:     INTCON3bits.INT2IE = 1;
   219  0001C0  88F0               	bsf	240,4,c	;volatile
   220  0001C2                     
   221                           ;mainTarea4.c: 135:     T0CONbits.T08BIT = 0;
   222  0001C2  9CD5               	bcf	213,6,c	;volatile
   223  0001C4                     
   224                           ;mainTarea4.c: 136:     T0CONbits.T0CS = 0;
   225  0001C4  9AD5               	bcf	213,5,c	;volatile
   226  0001C6                     
   227                           ;mainTarea4.c: 137:     T0CONbits.T0SE = 0;
   228  0001C6  98D5               	bcf	213,4,c	;volatile
   229  0001C8                     
   230                           ;mainTarea4.c: 138:     T0CONbits.PSA = 1;
   231  0001C8  86D5               	bsf	213,3,c	;volatile
   232  0001CA                     
   233                           ;mainTarea4.c: 140:     T0CONbits.TMR0ON = 1;
   234  0001CA  8ED5               	bsf	213,7,c	;volatile
   235  0001CC                     l33:
   236  0001CC  EFE6  F000         	goto	l33
   237  0001D0  EF07  F000         	goto	start
   238  0001D4                     __end_of_main:
   239                           	callstack 0
   240                           
   241 ;; *************** function _isr *****************
   242 ;; Defined at:
   243 ;;		line 151 in file "mainTarea4.c"
   244 ;; Parameters:    Size  Location     Type
   245 ;;		None
   246 ;; Auto vars:     Size  Location     Type
   247 ;;		None
   248 ;; Return value:  Size  Location     Type
   249 ;;                  1    wreg      void 
   250 ;; Registers used:
   251 ;;		wreg, status,2, status,0
   252 ;; Tracked objects:
   253 ;;		On entry : 0/0
   254 ;;		On exit  : 0/0
   255 ;;		Unchanged: 0/0
   256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   257 ;;      Params:         0       0       0       0       0       0       0       0       0
   258 ;;      Locals:         0       0       0       0       0       0       0       0       0
   259 ;;      Temps:          2       0       0       0       0       0       0       0       0
   260 ;;      Totals:         2       0       0       0       0       0       0       0       0
   261 ;;Total ram usage:        2 bytes
   262 ;; Hardware stack levels used: 1
   263 ;; This function calls:
   264 ;;		Nothing
   265 ;; This function is called by:
   266 ;;		Interrupt level 2
   267 ;; This function uses a non-reentrant model
   268 ;;
   269                           
   270                           	psect	intcode
   271  000008                     __pintcode:
   272                           	callstack 0
   273  000008                     _isr:
   274                           	callstack 30
   275                           
   276                           ;incstack = 0
   277  000008  8209               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   278  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   279                           
   280                           	psect	intcode_body
   281  000012                     __pintcode_body:
   282                           	callstack 30
   283  000012                     int_func:
   284                           	callstack 30
   285  000012  0006               	pop		; remove dummy address from shadow register refresh
   286  000014                     
   287                           ;mainTarea4.c: 157:     if (INTCONbits.INT0IF == 1){
   288  000014  A2F2               	btfss	242,1,c	;volatile
   289  000016  EF0F  F000         	goto	i2u1_41
   290  00001A  EF11  F000         	goto	i2u1_40
   291  00001E                     i2u1_41:
   292  00001E  EF14  F000         	goto	i2l790
   293  000022                     i2u1_40:
   294  000022                     
   295                           ;mainTarea4.c: 158:         stop = ~stop;
   296  000022  1E01               	comf	_stop^0,f,c
   297  000024  1E02               	comf	(_stop+1)^0,f,c
   298  000026                     
   299                           ;mainTarea4.c: 159:         INTCONbits.INT0IF = 0;
   300  000026  92F2               	bcf	242,1,c	;volatile
   301  000028                     i2l790:
   302                           
   303                           ;mainTarea4.c: 166:     if (INTCONbits.TMR0IF == 1){
   304  000028  A4F2               	btfss	242,2,c	;volatile
   305  00002A  EF19  F000         	goto	i2u2_41
   306  00002E  EF1B  F000         	goto	i2u2_40
   307  000032                     i2u2_41:
   308  000032  EFB0  F000         	goto	i2l826
   309  000036                     i2u2_40:
   310  000036                     
   311                           ;mainTarea4.c: 167:         timer++;
   312  000036  4A03               	infsnz	_timer^0,f,c
   313  000038  2A04               	incf	(_timer+1)^0,f,c
   314  00003A                     
   315                           ;mainTarea4.c: 168:         INTCONbits.TMR0IF = 0;
   316  00003A  94F2               	bcf	242,2,c	;volatile
   317  00003C                     
   318                           ;mainTarea4.c: 170:         if (timer >= 152) {
   319  00003C  BE04               	btfsc	(_timer+1)^0,7,c
   320  00003E  EF2A  F000         	goto	i2u3_41
   321  000042  5004               	movf	(_timer+1)^0,w,c
   322  000044  E109               	bnz	i2u3_40
   323  000046  0E98               	movlw	152
   324  000048  5C03               	subwf	_timer^0,w,c
   325  00004A  A0D8               	btfss	status,0,c
   326  00004C  EF2A  F000         	goto	i2u3_41
   327  000050  EF2C  F000         	goto	i2u3_40
   328  000054                     i2u3_41:
   329  000054  EF89  F000         	goto	i2l810
   330  000058                     i2u3_40:
   331  000058                     
   332                           ;mainTarea4.c: 172:             if (stop == 0){
   333  000058  5001               	movf	_stop^0,w,c
   334  00005A  1002               	iorwf	(_stop+1)^0,w,c
   335  00005C  A4D8               	btfss	status,2,c
   336  00005E  EF33  F000         	goto	i2u4_41
   337  000062  EF35  F000         	goto	i2u4_40
   338  000066                     i2u4_41:
   339  000066  EF85  F000         	goto	i2l808
   340  00006A                     i2u4_40:
   341  00006A                     
   342                           ;mainTarea4.c: 174:                 if (cont >= 0) {
   343  00006A  BE06               	btfsc	(_cont+1)^0,7,c
   344  00006C  EF3A  F000         	goto	i2u5_41
   345  000070  EF3C  F000         	goto	i2u5_40
   346  000074                     i2u5_41:
   347  000074  EF85  F000         	goto	i2l808
   348  000078                     i2u5_40:
   349  000078                     
   350                           ;mainTarea4.c: 175:                     LATDbits.LD4 = 0;
   351  000078  988C               	bcf	140,4,c	;volatile
   352                           
   353                           ;mainTarea4.c: 176:                     switch(cont){
   354  00007A  EF63  F000         	goto	i2l806
   355  00007E                     i2l47:
   356                           
   357                           ;mainTarea4.c: 178:                             LATDbits.LD0 = 0;
   358  00007E  908C               	bcf	140,0,c	;volatile
   359                           
   360                           ;mainTarea4.c: 179:                             LATDbits.LD1 = 0;
   361  000080  928C               	bcf	140,1,c	;volatile
   362                           
   363                           ;mainTarea4.c: 180:                             LATDbits.LD2 = 0;
   364  000082  948C               	bcf	140,2,c	;volatile
   365                           
   366                           ;mainTarea4.c: 181:                             LATDbits.LD3 = 0;
   367  000084  968C               	bcf	140,3,c	;volatile
   368                           
   369                           ;mainTarea4.c: 182:                             break;
   370  000086  EF85  F000         	goto	i2l808
   371  00008A                     i2l49:
   372                           
   373                           ;mainTarea4.c: 184:                             LATDbits.LD0 = 1;
   374  00008A  808C               	bsf	140,0,c	;volatile
   375                           
   376                           ;mainTarea4.c: 185:                             LATDbits.LD1 = 0;
   377  00008C  928C               	bcf	140,1,c	;volatile
   378                           
   379                           ;mainTarea4.c: 186:                             LATDbits.LD2 = 0;
   380  00008E  948C               	bcf	140,2,c	;volatile
   381                           
   382                           ;mainTarea4.c: 187:                             LATDbits.LD3 = 0;
   383  000090  968C               	bcf	140,3,c	;volatile
   384                           
   385                           ;mainTarea4.c: 188:                             break;
   386  000092  EF85  F000         	goto	i2l808
   387  000096                     i2l50:
   388                           
   389                           ;mainTarea4.c: 190:                             LATDbits.LD0 = 0;
   390  000096  908C               	bcf	140,0,c	;volatile
   391                           
   392                           ;mainTarea4.c: 191:                             LATDbits.LD1 = 1;
   393  000098  828C               	bsf	140,1,c	;volatile
   394                           
   395                           ;mainTarea4.c: 192:                             LATDbits.LD2 = 0;
   396  00009A  948C               	bcf	140,2,c	;volatile
   397                           
   398                           ;mainTarea4.c: 193:                             LATDbits.LD3 = 0;
   399  00009C  968C               	bcf	140,3,c	;volatile
   400                           
   401                           ;mainTarea4.c: 194:                             break;
   402  00009E  EF85  F000         	goto	i2l808
   403  0000A2                     i2l51:
   404                           
   405                           ;mainTarea4.c: 196:                             LATDbits.LD0 = 0;
   406  0000A2  908C               	bcf	140,0,c	;volatile
   407                           
   408                           ;mainTarea4.c: 197:                             LATDbits.LD1 = 0;
   409  0000A4  928C               	bcf	140,1,c	;volatile
   410                           
   411                           ;mainTarea4.c: 198:                             LATDbits.LD2 = 1;
   412  0000A6  848C               	bsf	140,2,c	;volatile
   413                           
   414                           ;mainTarea4.c: 199:                             LATDbits.LD3 = 0;
   415  0000A8  968C               	bcf	140,3,c	;volatile
   416                           
   417                           ;mainTarea4.c: 200:                             break;
   418  0000AA  EF85  F000         	goto	i2l808
   419  0000AE                     i2l52:
   420                           
   421                           ;mainTarea4.c: 202:                             LATDbits.LD0 = 0;
   422  0000AE  908C               	bcf	140,0,c	;volatile
   423                           
   424                           ;mainTarea4.c: 203:                             LATDbits.LD1 = 0;
   425  0000B0  928C               	bcf	140,1,c	;volatile
   426                           
   427                           ;mainTarea4.c: 204:                             LATDbits.LD2 = 0;
   428  0000B2  948C               	bcf	140,2,c	;volatile
   429                           
   430                           ;mainTarea4.c: 205:                             LATDbits.LD3 = 1;
   431  0000B4  868C               	bsf	140,3,c	;volatile
   432                           
   433                           ;mainTarea4.c: 206:                             break;
   434  0000B6  EF85  F000         	goto	i2l808
   435  0000BA                     i2l53:
   436                           
   437                           ;mainTarea4.c: 208:                             LATDbits.LD0 = 1;
   438  0000BA  808C               	bsf	140,0,c	;volatile
   439                           
   440                           ;mainTarea4.c: 209:                             LATDbits.LD1 = 1;
   441  0000BC  828C               	bsf	140,1,c	;volatile
   442                           
   443                           ;mainTarea4.c: 210:                             LATDbits.LD2 = 1;
   444  0000BE  848C               	bsf	140,2,c	;volatile
   445                           
   446                           ;mainTarea4.c: 211:                             LATDbits.LD3 = 1;
   447  0000C0  868C               	bsf	140,3,c	;volatile
   448                           
   449                           ;mainTarea4.c: 212:                             break;
   450  0000C2  EF85  F000         	goto	i2l808
   451  0000C6                     i2l806:
   452  0000C6  C005  F007         	movff	_cont,??_isr
   453  0000CA  C006  F008         	movff	_cont+1,??_isr+1
   454                           
   455                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   456                           ; Switch size 1, requested type "simple"
   457                           ; Number of cases is 1, Range of values is 0 to 0
   458                           ; switch strategies available:
   459                           ; Name         Instructions Cycles
   460                           ; simple_byte            4     3 (average)
   461                           ;	Chosen strategy is simple_byte
   462  0000CE  5008               	movf	(??_isr+1)^0,w,c
   463  0000D0  0A00               	xorlw	0	; case 0
   464  0000D2  B4D8               	btfsc	status,2,c
   465  0000D4  EF6E  F000         	goto	i2l840
   466  0000D8  EF5D  F000         	goto	i2l53
   467  0000DC                     i2l840:
   468                           
   469                           ; Switch size 1, requested type "simple"
   470                           ; Number of cases is 5, Range of values is 0 to 4
   471                           ; switch strategies available:
   472                           ; Name         Instructions Cycles
   473                           ; simple_byte           16     9 (average)
   474                           ;	Chosen strategy is simple_byte
   475  0000DC  5007               	movf	??_isr^0,w,c
   476  0000DE  0A00               	xorlw	0	; case 0
   477  0000E0  B4D8               	btfsc	status,2,c
   478  0000E2  EF3F  F000         	goto	i2l47
   479  0000E6  0A01               	xorlw	1	; case 1
   480  0000E8  B4D8               	btfsc	status,2,c
   481  0000EA  EF45  F000         	goto	i2l49
   482  0000EE  0A03               	xorlw	3	; case 2
   483  0000F0  B4D8               	btfsc	status,2,c
   484  0000F2  EF4B  F000         	goto	i2l50
   485  0000F6  0A01               	xorlw	1	; case 3
   486  0000F8  B4D8               	btfsc	status,2,c
   487  0000FA  EF51  F000         	goto	i2l51
   488  0000FE  0A07               	xorlw	7	; case 4
   489  000100  B4D8               	btfsc	status,2,c
   490  000102  EF57  F000         	goto	i2l52
   491  000106  EF5D  F000         	goto	i2l53
   492  00010A                     i2l808:
   493                           
   494                           ;mainTarea4.c: 217:         timer = 0;
   495  00010A  0E00               	movlw	0
   496  00010C  6E04               	movwf	(_timer+1)^0,c
   497  00010E  0E00               	movlw	0
   498  000110  6E03               	movwf	_timer^0,c
   499  000112                     i2l810:
   500                           
   501                           ;mainTarea4.c: 225:         if (INTCON3bits.INT1IF == 1 ){
   502  000112  A0F0               	btfss	240,0,c	;volatile
   503  000114  EF8E  F000         	goto	i2u6_41
   504  000118  EF90  F000         	goto	i2u6_40
   505  00011C                     i2u6_41:
   506  00011C  EF9C  F000         	goto	i2l818
   507  000120                     i2u6_40:
   508  000120                     
   509                           ;mainTarea4.c: 226:             if (stop == 0) {
   510  000120  5001               	movf	_stop^0,w,c
   511  000122  1002               	iorwf	(_stop+1)^0,w,c
   512  000124  A4D8               	btfss	status,2,c
   513  000126  EF97  F000         	goto	i2u7_41
   514  00012A  EF99  F000         	goto	i2u7_40
   515  00012E                     i2u7_41:
   516  00012E  EF9B  F000         	goto	i2l816
   517  000132                     i2u7_40:
   518  000132                     
   519                           ;mainTarea4.c: 227:             cont++;
   520  000132  4A05               	infsnz	_cont^0,f,c
   521  000134  2A06               	incf	(_cont+1)^0,f,c
   522  000136                     i2l816:
   523                           
   524                           ;mainTarea4.c: 229:             INTCON3bits.INT1IF = 0;
   525  000136  90F0               	bcf	240,0,c	;volatile
   526  000138                     i2l818:
   527                           
   528                           ;mainTarea4.c: 235:         if (INTCON3bits.INT2IF == 1 ){
   529  000138  A2F0               	btfss	240,1,c	;volatile
   530  00013A  EFA1  F000         	goto	i2u8_41
   531  00013E  EFA3  F000         	goto	i2u8_40
   532  000142                     i2u8_41:
   533  000142  EFB0  F000         	goto	i2l826
   534  000146                     i2u8_40:
   535  000146                     
   536                           ;mainTarea4.c: 236:             if (stop == 0) {
   537  000146  5001               	movf	_stop^0,w,c
   538  000148  1002               	iorwf	(_stop+1)^0,w,c
   539  00014A  A4D8               	btfss	status,2,c
   540  00014C  EFAA  F000         	goto	i2u9_41
   541  000150  EFAC  F000         	goto	i2u9_40
   542  000154                     i2u9_41:
   543  000154  EFAF  F000         	goto	i2l824
   544  000158                     i2u9_40:
   545  000158                     
   546                           ;mainTarea4.c: 237:             cont--;
   547  000158  0605               	decf	_cont^0,f,c
   548  00015A  A0D8               	btfss	status,0,c
   549  00015C  0606               	decf	(_cont+1)^0,f,c
   550  00015E                     i2l824:
   551                           
   552                           ;mainTarea4.c: 239:             INTCON3bits.INT2IF = 0;
   553  00015E  92F0               	bcf	240,1,c	;volatile
   554  000160                     i2l826:
   555                           
   556                           ;mainTarea4.c: 247: if (stop == 0) {
   557  000160  5001               	movf	_stop^0,w,c
   558  000162  1002               	iorwf	(_stop+1)^0,w,c
   559  000164  A4D8               	btfss	status,2,c
   560  000166  EFB7  F000         	goto	i2u10_41
   561  00016A  EFB9  F000         	goto	i2u10_40
   562  00016E                     i2u10_41:
   563  00016E  EFC5  F000         	goto	i2l60
   564  000172                     i2u10_40:
   565  000172                     
   566                           ;mainTarea4.c: 248:     if (cont < 0){
   567  000172  BE06               	btfsc	(_cont+1)^0,7,c
   568  000174  EFC0  F000         	goto	i2u11_40
   569  000178  EFBE  F000         	goto	i2u11_41
   570  00017C                     i2u11_41:
   571  00017C  EFC5  F000         	goto	i2l60
   572  000180                     i2u11_40:
   573  000180                     
   574                           ;mainTarea4.c: 249:         LATDbits.LD0 = 0;
   575  000180  908C               	bcf	140,0,c	;volatile
   576                           
   577                           ;mainTarea4.c: 250:         LATDbits.LD1 = 0;
   578  000182  928C               	bcf	140,1,c	;volatile
   579                           
   580                           ;mainTarea4.c: 251:         LATDbits.LD2 = 0;
   581  000184  948C               	bcf	140,2,c	;volatile
   582                           
   583                           ;mainTarea4.c: 252:         LATDbits.LD3 = 0;
   584  000186  968C               	bcf	140,3,c	;volatile
   585                           
   586                           ;mainTarea4.c: 253:         LATDbits.LD4 = 1;
   587  000188  888C               	bsf	140,4,c	;volatile
   588  00018A                     i2l60:
   589  00018A  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   590  00018C  0011               	retfie		f
   591  00018E                     __end_of_isr:
   592                           	callstack 0
   593  0000                     
   594                           	psect	rparam
   595  0000                     
   596                           	psect	temp
   597  000009                     btemp:
   598                           	callstack 0
   599  000009                     	ds	1
   600  0000                     int$flags	set	btemp
   601  0000                     wtemp8	set	btemp+1
   602  0000                     ttemp5	set	btemp+1
   603  0000                     ttemp6	set	btemp+4
   604  0000                     ttemp7	set	btemp+8
   605                           
   606                           	psect	idloc
   607                           
   608                           ;Config register IDLOC0 @ 0x200000
   609                           ;	unspecified, using default values
   610  200000                     	org	2097152
   611  200000  FF                 	db	255
   612                           
   613                           ;Config register IDLOC1 @ 0x200001
   614                           ;	unspecified, using default values
   615  200001                     	org	2097153
   616  200001  FF                 	db	255
   617                           
   618                           ;Config register IDLOC2 @ 0x200002
   619                           ;	unspecified, using default values
   620  200002                     	org	2097154
   621  200002  FF                 	db	255
   622                           
   623                           ;Config register IDLOC3 @ 0x200003
   624                           ;	unspecified, using default values
   625  200003                     	org	2097155
   626  200003  FF                 	db	255
   627                           
   628                           ;Config register IDLOC4 @ 0x200004
   629                           ;	unspecified, using default values
   630  200004                     	org	2097156
   631  200004  FF                 	db	255
   632                           
   633                           ;Config register IDLOC5 @ 0x200005
   634                           ;	unspecified, using default values
   635  200005                     	org	2097157
   636  200005  FF                 	db	255
   637                           
   638                           ;Config register IDLOC6 @ 0x200006
   639                           ;	unspecified, using default values
   640  200006                     	org	2097158
   641  200006  FF                 	db	255
   642                           
   643                           ;Config register IDLOC7 @ 0x200007
   644                           ;	unspecified, using default values
   645  200007                     	org	2097159
   646  200007  FF                 	db	255
   647                           
   648                           	psect	config
   649                           
   650                           ;Config register CONFIG1L @ 0x300000
   651                           ;	PLL Prescaler Selection bits
   652                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
   653                           ;	System Clock Postscaler Selection bits
   654                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   655                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   656                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   657  300000                     	org	3145728
   658  300000  01                 	db	1
   659                           
   660                           ;Config register CONFIG1H @ 0x300001
   661                           ;	Oscillator Selection bits
   662                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
   663                           ;	Fail-Safe Clock Monitor Enable bit
   664                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   665                           ;	Internal/External Oscillator Switchover bit
   666                           ;	IESO = OFF, Oscillator Switchover mode disabled
   667  300001                     	org	3145729
   668  300001  0B                 	db	11
   669                           
   670                           ;Config register CONFIG2L @ 0x300002
   671                           ;	Power-up Timer Enable bit
   672                           ;	PWRT = ON, PWRT enabled
   673                           ;	Brown-out Reset Enable bits
   674                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   675                           ;	Brown-out Reset Voltage bits
   676                           ;	BORV = 3, Minimum setting 2.05V
   677                           ;	USB Voltage Regulator Enable bit
   678                           ;	VREGEN = OFF, USB voltage regulator disabled
   679  300002                     	org	3145730
   680  300002  18                 	db	24
   681                           
   682                           ;Config register CONFIG2H @ 0x300003
   683                           ;	Watchdog Timer Enable bit
   684                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   685                           ;	Watchdog Timer Postscale Select bits
   686                           ;	WDTPS = 0x0, user specified literal
   687  300003                     	org	3145731
   688  300003  00                 	db	0
   689                           
   690                           ; Padding undefined space
   691  300004                     	org	3145732
   692  300004  FF                 	db	255
   693                           
   694                           ;Config register CONFIG3H @ 0x300005
   695                           ;	CCP2 MUX bit
   696                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   697                           ;	PORTB A/D Enable bit
   698                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   699                           ;	Low-Power Timer 1 Oscillator Enable bit
   700                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   701                           ;	MCLR Pin Enable bit
   702                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   703  300005                     	org	3145733
   704  300005  83                 	db	131
   705                           
   706                           ;Config register CONFIG4L @ 0x300006
   707                           ;	Stack Full/Underflow Reset Enable bit
   708                           ;	STVREN = ON, Stack full/underflow will cause Reset
   709                           ;	Single-Supply ICSP Enable bit
   710                           ;	LVP = OFF, Single-Supply ICSP disabled
   711                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   712                           ;	ICPRT = OFF, ICPORT disabled
   713                           ;	Extended Instruction Set Enable bit
   714                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   715                           ;	Background Debugger Enable bit
   716                           ;	DEBUG = 0x1, unprogrammed default
   717  300006                     	org	3145734
   718  300006  81                 	db	129
   719                           
   720                           ; Padding undefined space
   721  300007                     	org	3145735
   722  300007  FF                 	db	255
   723                           
   724                           ;Config register CONFIG5L @ 0x300008
   725                           ;	Code Protection bit
   726                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   727                           ;	Code Protection bit
   728                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   729                           ;	Code Protection bit
   730                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   731                           ;	Code Protection bit
   732                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   733  300008                     	org	3145736
   734  300008  0F                 	db	15
   735                           
   736                           ;Config register CONFIG5H @ 0x300009
   737                           ;	Boot Block Code Protection bit
   738                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   739                           ;	Data EEPROM Code Protection bit
   740                           ;	CPD = OFF, Data EEPROM is not code-protected
   741  300009                     	org	3145737
   742  300009  C0                 	db	192
   743                           
   744                           ;Config register CONFIG6L @ 0x30000A
   745                           ;	Write Protection bit
   746                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   747                           ;	Write Protection bit
   748                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   749                           ;	Write Protection bit
   750                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   751                           ;	Write Protection bit
   752                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   753  30000A                     	org	3145738
   754  30000A  0F                 	db	15
   755                           
   756                           ;Config register CONFIG6H @ 0x30000B
   757                           ;	Configuration Register Write Protection bit
   758                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   759                           ;	Boot Block Write Protection bit
   760                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   761                           ;	Data EEPROM Write Protection bit
   762                           ;	WRTD = OFF, Data EEPROM is not write-protected
   763  30000B                     	org	3145739
   764  30000B  E0                 	db	224
   765                           
   766                           ;Config register CONFIG7L @ 0x30000C
   767                           ;	Table Read Protection bit
   768                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   769                           ;	Table Read Protection bit
   770                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   771                           ;	Table Read Protection bit
   772                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   773                           ;	Table Read Protection bit
   774                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   775  30000C                     	org	3145740
   776  30000C  0F                 	db	15
   777                           
   778                           ;Config register CONFIG7H @ 0x30000D
   779                           ;	Boot Block Table Read Protection bit
   780                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   781  30000D                     	org	3145741
   782  30000D  40                 	db	64
   783                           tosu	equ	0xFFF
   784                           tosh	equ	0xFFE
   785                           tosl	equ	0xFFD
   786                           stkptr	equ	0xFFC
   787                           pclatu	equ	0xFFB
   788                           pclath	equ	0xFFA
   789                           pcl	equ	0xFF9
   790                           tblptru	equ	0xFF8
   791                           tblptrh	equ	0xFF7
   792                           tblptrl	equ	0xFF6
   793                           tablat	equ	0xFF5
   794                           prodh	equ	0xFF4
   795                           prodl	equ	0xFF3
   796                           indf0	equ	0xFEF
   797                           postinc0	equ	0xFEE
   798                           postdec0	equ	0xFED
   799                           preinc0	equ	0xFEC
   800                           plusw0	equ	0xFEB
   801                           fsr0h	equ	0xFEA
   802                           fsr0l	equ	0xFE9
   803                           wreg	equ	0xFE8
   804                           indf1	equ	0xFE7
   805                           postinc1	equ	0xFE6
   806                           postdec1	equ	0xFE5
   807                           preinc1	equ	0xFE4
   808                           plusw1	equ	0xFE3
   809                           fsr1h	equ	0xFE2
   810                           fsr1l	equ	0xFE1
   811                           bsr	equ	0xFE0
   812                           indf2	equ	0xFDF
   813                           postinc2	equ	0xFDE
   814                           postdec2	equ	0xFDD
   815                           preinc2	equ	0xFDC
   816                           plusw2	equ	0xFDB
   817                           fsr2h	equ	0xFDA
   818                           fsr2l	equ	0xFD9
   819                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      2       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      2       8       1        8.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8      20        0.0%
DATA                 0      0       8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Oct 15 15:45:45 2021

                     l33 01CC                       l34 01CC                      l740 01A0  
                    l750 01AA                      l742 01A2                      l760 01B4  
                    l752 01AC                      l744 01A4                      l736 018E  
                    l770 01BE                      l762 01B6                      l754 01AE  
                    l746 01A6                      l738 019E                      l780 01C8  
                    l772 01C0                      l764 01B8                      l756 01B0  
                    l748 01A8                      l782 01CA                      l774 01C2  
                    l766 01BA                      l758 01B2                      l776 01C4  
                    l768 01BC                      l778 01C6                      _isr 0008  
                   ?_isr 0007                     i2l50 0096                     i2l51 00A2  
                   i2l60 018A                     i2l52 00AE                     i2l53 00BA  
                   i2l47 007E                     i2l49 008A                     _cont 0005  
                   _main 018E                     btemp 0009                     _stop 0001  
                   start 000E             ___param_bank 000000                    ??_isr 0007  
                  ?_main 0007                    i2l800 006A                    i2l802 0078  
                  i2l810 0112                    i2l820 0146                    i2l812 0120  
                  i2l830 0180                    i2l822 0158                    i2l814 0132  
                  i2l806 00C6                    i2l824 015E                    i2l816 0136  
                  i2l840 00DC                    i2l808 010A                    i2l818 0138  
                  i2l826 0160                    i2l828 0172                    i2l790 0028  
                  i2l792 0036                    i2l784 0014                    i2l794 003A  
                  i2l786 0022                    i2l796 003C                    i2l788 0026  
                  i2l798 0058                    _TRISB 000F93                    _TRISD 000F95  
                  _timer 0003                    ttemp5 000A                    ttemp6 000D  
                  ttemp7 0011                    status 000FD8                    wtemp8 000A  
        __initialization 01D4             __end_of_main 01D4                   ??_main 0009  
          __activetblptr 000002                   _ADCON1 000FC1                   i2u1_40 0022  
                 i2u1_41 001E                   i2u2_40 0036                   i2u2_41 0032  
                 i2u3_40 0058                   i2u3_41 0054                   i2u4_40 006A  
                 i2u4_41 0066                   i2u5_40 0078                   i2u5_41 0074  
                 i2u6_40 0120                   i2u6_41 011C                   i2u7_40 0132  
                 i2u7_41 012E                   i2u8_40 0146                   i2u8_41 0142  
                 i2u9_40 0158                   i2u9_41 0154                   isa$std 000001  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 01E0  
          ___rparam_used 000001           __pcstackCOMRAM 0007                  i2u10_40 0172  
                i2u10_41 016E                  i2u11_40 0180                  i2u11_41 017C  
                __Hparam 0000                  __Lparam 0000                  __pcinit 01D4  
                __ramtop 0800                  __ptext0 018E                _T0CONbits 000FD5  
           __size_of_isr 0186           __pintcode_body 0012     end_of_initialization 01E0  
          __Lmediumconst 0000                  int_func 0012      start_initialization 01D4  
            __end_of_isr 018E              __pbssCOMRAM 0001                __pintcode 0008  
               _LATBbits 000F8A                 _LATDbits 000F8C                 _RCONbits 000FD0  
            _INTCON2bits 000FF1              _INTCON3bits 000FF0                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 0046                 isa$xinst 000000  
               int$flags 0009               _INTCONbits 000FF2                 intlevel2 0000  
             _OSCCONbits 000FD3  
